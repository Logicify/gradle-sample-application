import org.grails.gradle.plugin.tasks.GrailsTask
version "0.1"

repositories {
    grails.central() //creates a maven repo for the Grails Central repository (Core libraries and plugins)
}

configurations {
/*    all*.exclude module: "grails-web"
    all*.exclude module: "grails-web-*"
    all*.exclude module: "rest-client-builder"
    all*.exclude module: "grails-publish"*/
}

dependencies {
    bootstrap "org.grails.plugins:jetty:2.0.3" // No container is deployed by default, so add this
    compile "org.grails.plugins:release:3.0.1"
    compile "org.grails.plugins:quartz:1.0.1"
    compile "org.grails.plugins:standalone:1.2.3"
    runtime "javax.servlet:javax.servlet-api:3.1.0"
    runtime "org.grails.plugins:database-migration:1.4.0"
    compile project(':gtp-domain')
}

task 'debug'(type: GrailsTask, overwrite: true) {
    command "run-app"
    jvmOptions {
        jvmArgs '-Xms32m -Xmx1524m -XX:PermSize=32m -XX:MaxPermSize=512m -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005'.split(' ')
        // you could also use the memory properties on JavaForkOptions directly;
        // see http://www.gradle.org/docs/current/javadoc/org/gradle/process/JavaForkOptions.html
    }
}

task 'run'(type: GrailsTask, overwrite: true) {
    command "run-app"
    jvmOptions {
        jvmArgs '-Xms32m -Xmx1524m -XX:PermSize=32m -XX:MaxPermSize=512m -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseParNewGC'.split(' ')
        // you could also use the memory properties on JavaForkOptions directly;
        // see http://www.gradle.org/docs/current/javadoc/org/gradle/process/JavaForkOptions.html
    }
}

task 'package'(type: GrailsTask) {
    command "build-standalone"
    args(['-jetty, worker.jar'])
}
